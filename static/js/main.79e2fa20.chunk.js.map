{"version":3,"sources":["components/Form/Form.module.css","components/transitions/pop.module.css","components/Contact/Contact.module.css","components/ContactList/ContactsList.module.css","components/Filter/Filter.module.css","components/transitions/slide.module.css","components/ErrorNotification/ErrorNotification.module.css","components/transitions/backslide.module.css","redux/actions/actions.js","components/Form/Form.js","redux/selectors/selectors.js","components/Form/FormContainer.js","components/Contact/Contact.js","components/ContactList/ContactsList.js","components/Filter/Filter.js","components/ErrorNotification/ErrorNotification.js","components/App/App.js","redux/reducers/reducers.js","redux/store/store.js","index.js"],"names":["module","exports","Type","Form","state","name","phone","handleChange","e","setState","target","value","handleFormSubmit","preventDefault","props","contacts","find","contact","onGetSameName","onFormSubmit","onSubmit","this","className","css","form","type","placeholder","onChange","required","input","button","Component","getAllContacts","getFilterValue","filter","connect","Selectors","dispatch","payload","id","uuidv4","FormSubmit","onDelete","DeleteContact","styles","onClick","ContactsList","showError","onFilterChange","toLowerCase","includes","prevProps","prevState","localStorage","setItem","JSON","stringify","filteredContacts","TransitionGroup","component","list","map","CSSTransition","key","timeout","classNames","popTransition","listItem","Filter","filterValue","label","filterChange","FilterChange","ErrorNotification","errorBox","containerStyle","display","flexDirection","justifyContent","alignItems","minHeight","App","showTitle","showErrorChange","setTimeout","style","in","backSlideTransition","unmountOnExit","slideTransition","marginBottom","FormContainer","length","INITIAL_STATE","parse","getItem","reducer","action","console","log","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.79e2fa20.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__2vS2t\",\"formLabel\":\"Form_formLabel__2yTWo\",\"input\":\"Form_input__16A-V\",\"button\":\"Form_button__2hyD5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"pop_enter__30xHi\",\"enterActive\":\"pop_enterActive__iY6Fx\",\"exit\":\"pop_exit__1VGl9\",\"exitActive\":\"pop_exitActive__ukI-w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Contact_button__1Kh_h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactsList_list__28G1r\",\"listItem\":\"ContactsList_listItem__2mlbo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__q6P7w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__2s0-B\",\"enterActive\":\"slide_enterActive__2vIdE\",\"exit\":\"slide_exit__3hvRN\",\"exitActive\":\"slide_exitActive__mE8rG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorBox\":\"ErrorNotification_errorBox__3UCEL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"backslide_enter__2se-Y\",\"enterActive\":\"backslide_enterActive__MAK8Q\",\"exit\":\"backslide_exit__2cpxR\",\"exitActive\":\"backslide_exitActive__2T2Yh\"};","import { v4 as uuidv4 } from \"uuid\";\r\nexport const Type = {\r\n  SUBMIT: \"SUBMIT\",\r\n  DELETE: \"DELETE\",\r\n  FILTER: \"FILTER\",\r\n};\r\n\r\nexport const FormSubmit = (name, phone) => ({\r\n  type: Type.SUBMIT,\r\n  payload: { name: name, phone: phone, id: uuidv4() },\r\n});\r\n\r\nexport const DeleteContact = (id) => ({\r\n  type: Type.DELETE,\r\n  payload: id,\r\n});\r\n\r\nexport const FilterChange = (value) => ({\r\n  type: Type.FILTER,\r\n  payload: value,\r\n});\r\n","import React from \"react\";\r\nimport css from \"./Form.module.css\";\r\nimport { Component } from \"react\";\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: \"\",\r\n    phone: \"\",\r\n  };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (\r\n      this.props.contacts.find((contact) => contact.name === this.state.name)\r\n    ) {\r\n      this.props.onGetSameName();\r\n      return this.setState({\r\n        name: \"\",\r\n        phone: \"\",\r\n      });\r\n    }\r\n    this.props.onFormSubmit(this.state.name, this.state.phone);\r\n    this.setState({\r\n      name: \"\",\r\n      phone: \"\",\r\n    });\r\n  };\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleFormSubmit} className={css.form}>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter name\"\r\n          name=\"name\"\r\n          value={this.state.name}\r\n          onChange={this.handleChange}\r\n          required\r\n          className={css.input}\r\n        ></input>\r\n        <input\r\n          type=\"text\"\r\n          placeholder=\"Enter number\"\r\n          name=\"phone\"\r\n          value={this.state.phone}\r\n          onChange={this.handleChange}\r\n          required\r\n          className={css.input}\r\n        ></input>\r\n        <button type=\"submit\" className={css.button}>\r\n          Save contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Form;\r\n","export const getAllContacts = (state) => state.contacts;\r\n\r\nexport const getFilterValue = (state) => state.filter;\r\n","import { connect } from \"react-redux\";\r\nimport { FormSubmit } from \"../../redux/actions/actions\";\r\nimport Form from \"./Form\";\r\nimport * as Selectors from \"../../redux/selectors/selectors\";\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: Selectors.getAllContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onFormSubmit: (name, phone) => dispatch(FormSubmit(name, phone)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\r\n","import React, { Fragment } from \"react\";\r\nimport styles from \"./Contact.module.css\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { DeleteContact } from \"../../redux/actions/actions\";\r\n\r\nconst Contact = ({ name, phone, id, onDelete }) => (\r\n  <Fragment>\r\n    <p className={styles.name}>{name}</p>\r\n    <p className={styles.phone}>{phone}</p>\r\n    <button\r\n      type=\"button\"\r\n      className={styles.button}\r\n      onClick={() => onDelete(id)}\r\n    >\r\n      &times;\r\n    </button>\r\n  </Fragment>\r\n);\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDelete: (id) => dispatch(DeleteContact(id)),\r\n});\r\n\r\nContact.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  phone: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Contact);\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"../Contact/Contact\";\r\nimport styles from \"./ContactsList.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\nimport * as Selectors from \"../../redux/selectors/selectors\";\r\n\r\nclass ContactsList extends Component {\r\n  state = { showError: false };\r\n  onFilterChange = (contacts, filter) => {\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase())\r\n    );\r\n  };\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    localStorage.setItem(\"contacts\", JSON.stringify(this.props.contacts));\r\n  }\r\n\r\n  render() {\r\n    const filteredContacts = this.onFilterChange(\r\n      this.props.contacts,\r\n      this.props.filter\r\n    );\r\n    return (\r\n      <TransitionGroup component=\"ul\" className={styles.list}>\r\n        {filteredContacts.map((contact) => (\r\n          <CSSTransition\r\n            key={contact.id}\r\n            timeout={200}\r\n            classNames={popTransition}\r\n          >\r\n            <li key={contact.id} className={styles.listItem}>\r\n              <Contact {...contact} />\r\n            </li>\r\n          </CSSTransition>\r\n        ))}\r\n      </TransitionGroup>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: Selectors.getAllContacts(state),\r\n  filter: Selectors.getFilterValue(state),\r\n});\r\nexport default connect(mapStateToProps)(ContactsList);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Filter.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport { FilterChange } from \"../../redux/actions/actions\";\r\n\r\nclass Filter extends Component {\r\n  state = { filterValue: \"\" };\r\n\r\n  render() {\r\n    const { filterValue } = this.state;\r\n    return (\r\n      <>\r\n        <label className={styles.label}>\r\n          Find contact by name:\r\n          <input\r\n            type=\"search\"\r\n            name=\"filter\"\r\n            value={filterValue}\r\n            onChange={(e) => {\r\n              this.setState({ filterValue: e.target.value });\r\n              this.props.filterChange(e.target.value);\r\n            }}\r\n          ></input>\r\n        </label>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  filterChange: (value) => dispatch(FilterChange(value)),\r\n});\r\n\r\nexport default connect(null, mapDispatchToProps)(Filter);\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./ErrorNotification.module.css\";\r\n\r\nclass ErrorNotification extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className={styles.errorBox}>\r\n          <p>This contact is already exist</p>\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ErrorNotification;\r\n","import React, { Component } from \"react\";\r\nimport FormContainer from \"../Form/FormContainer\";\r\nimport ContactsList from \"../ContactList/ContactsList\";\r\nimport Filter from \"../Filter/Filter\";\r\nimport { connect } from \"react-redux\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport popTransition from \"../transitions/pop.module.css\";\r\nimport slideTransition from \"../transitions/slide.module.css\";\r\nimport ErrorNotification from \"../ErrorNotification/ErrorNotification\";\r\nimport backSlideTransition from \"../transitions/backslide.module.css\";\r\nimport * as Selectors from \"../../redux/selectors/selectors\";\r\n\r\nconst containerStyle = {\r\n  display: \"flex\",\r\n  flexDirection: \"column\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  minHeight: \"100vh\",\r\n};\r\n\r\nclass App extends Component {\r\n  state = { showTitle: false, showError: false };\r\n\r\n  componentDidMount() {\r\n    this.setState({ showTitle: true });\r\n  }\r\n\r\n  showErrorChange = () => {\r\n    this.setState({ showError: true });\r\n    setTimeout(() => {\r\n      this.setState({ showError: false });\r\n    }, 1500);\r\n  };\r\n\r\n  render() {\r\n    const { showTitle, showError } = this.state;\r\n    return (\r\n      <div style={containerStyle}>\r\n        <CSSTransition\r\n          in={showError}\r\n          timeout={500}\r\n          classNames={backSlideTransition}\r\n          unmountOnExit\r\n        >\r\n          <ErrorNotification />\r\n        </CSSTransition>\r\n        <CSSTransition\r\n          in={showTitle}\r\n          timeout={500}\r\n          classNames={slideTransition}\r\n          unmountOnExit\r\n        >\r\n          <h1 style={{ marginBottom: \"30px\" }}>Phonebook</h1>\r\n        </CSSTransition>\r\n\r\n        <FormContainer onGetSameName={this.showErrorChange} />\r\n        <CSSTransition\r\n          in={this.props.contacts.length >= 2}\r\n          timeout={500}\r\n          classNames={popTransition}\r\n          unmountOnExit\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n        <ContactsList />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: Selectors.getAllContacts(state),\r\n});\r\nexport default connect(mapStateToProps)(App);\r\n","import { Type } from \"../actions/actions\";\r\n\r\nconst INITIAL_STATE = {\r\n  contacts: JSON.parse(localStorage.getItem(\"contacts\")) || [],\r\n  filter: \"\",\r\n};\r\n\r\nconst reducer = (state = INITIAL_STATE, action) => {\r\n  switch (action.type) {\r\n    case Type.SUBMIT:\r\n      return {\r\n        ...state,\r\n        contacts: [...state.contacts, action.payload],\r\n      };\r\n\r\n    case Type.DELETE:\r\n      return {\r\n        ...state,\r\n        contacts: state.contacts.filter(\r\n          (contact) => contact.id !== action.payload\r\n        ),\r\n      };\r\n\r\n    case Type.FILTER:\r\n      console.log(state);\r\n      return {\r\n        ...state,\r\n        filter: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import reducer from \"../reducers/reducers\";\r\nimport { createStore } from \"redux\";\r\n\r\nconst store = createStore(reducer);\r\n\r\nexport default store;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store/store\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}